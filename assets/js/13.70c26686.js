(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{445:function(e,t,r){"use strict";r.r(t);var a=r(53),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"features"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),r("p",[e._v("This package allows you to create vouchers and associate them with model instances. Vouchers are redeemable by any model with the "),r("code",[e._v("CanRedeemVouchers")]),e._v(" trait. This means that a voucher would give "),r("em",[e._v("any")]),e._v(" model access to "),r("em",[e._v("any")]),e._v(" model with the "),r("code",[e._v("HasVouchers")]),e._v(" trait.")]),e._v(" "),r("ul",[r("li",[e._v("🔅 Associate one voucher with one or more items")]),e._v(" "),r("li",[e._v("❤ Flexible Redeemer Models with polymorphic relationship to redeemers. Vouchers can be redeemed by any model. Useful for multi-auth or User/Guest architecture")]),e._v(" "),r("li",[e._v("📝 Multiple redeems")]),e._v(" "),r("li",[e._v("💪 Limit Access: can define model instances that are allowed or excluded from redeeming a Voucher")]),e._v(" "),r("li",[e._v("Multiple limit scheme; exhaust redeems per instance, per user or per item")]),e._v(" "),r("li",[e._v("Implements "),r("a",{attrs:{href:"https://github.com/augustusnaz/laravel-model-data",target:"_blank",rel:"noopener noreferrer"}},[e._v("moirei/"),r("strong",[e._v("laravel-model-data")]),r("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=s.exports}}]);